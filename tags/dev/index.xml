<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dev on REhex</title>
    <link>/tags/dev/</link>
    <description>Recent content in dev on REhex</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 01 Feb 2020 13:53:37 +0100</lastBuildDate><atom:link href="/tags/dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Expose Any Port With Ngrok</title>
      <link>/posts/expose-any-port-with-ngrok/</link>
      <pubDate>Sat, 01 Feb 2020 13:53:37 +0100</pubDate>
      
      <guid>/posts/expose-any-port-with-ngrok/</guid>
      <description>&lt;p&gt;How to expose any port to the Internet without exposing your private IP (for free).&lt;/p&gt;</description>
      <content>&lt;p&gt;How to expose any port to the Internet without exposing your private IP (for free).&lt;/p&gt;
&lt;p&gt;Today I will show you how to easly setup exposure of any port without exposing your IP, this solution also bypasses situation when your ISP is not giving possibility to have private (own) IP address which is not behind any NAT.&lt;/p&gt;
&lt;p&gt;I used this solution to create access (for myself) to SSH and locally hosted security camera system at my home.&lt;/p&gt;
&lt;h2 id=&#34;1-setup-ngrok&#34;&gt;1. Setup NGrok&lt;/h2&gt;
&lt;p&gt;First of all you need to have an ngrok account&lt;a href=&#34;#references&#34;&gt;[1]&lt;/a&gt; - free account is enough for our purposes. Generally ngrok is a reverse-proxy service where you need tun ngrok client on target machine, client enables connection with ngrok server and then you are able to connect with your machine (where ngrok client is running) via Internet.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Free acount forwards local port as random remote port (usually under const hostname: &lt;code&gt;0.tcp.ngrok.io&lt;/code&gt; for tcp tunnels)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After you have account you need to download client and activate account with your API key (follow the instuctions from web service).&lt;/p&gt;
&lt;h2 id=&#34;2-verify-that-tunnel-works&#34;&gt;2. Verify that tunnel works&lt;/h2&gt;
&lt;p&gt;Create ngrok config file (under &lt;code&gt;~/.ngrok2/ngrok.yml&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;authtoken&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;YOUR_TOKEN_HERE&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;tunnels&lt;/span&gt;:
        &lt;span style=&#34;color:#f92672&#34;&gt;sshglob&lt;/span&gt;:
                &lt;span style=&#34;color:#f92672&#34;&gt;proto&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;tcp&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;addr&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Above config setups tunnel &lt;code&gt;sshglob&lt;/code&gt; which forwards locally hosted &lt;code&gt;tcp/22&lt;/code&gt; - in this case SSH service. You should change these values according to your needs.&lt;/p&gt;
&lt;p&gt;Now you can try to start ngrok &lt;code&gt;ngrok start sshglob&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;ngrok by @inconshreveable                                                            (Ctrl+C to quit)

Session Status                online
Account                       whoami (Plan: Free)
Version                       2.3.35
Region                        United States (us)
Web Interface                 http://127.0.0.1:4040
Forwarding                    tcp://0.tcp.ngrok.io:13036 -&amp;gt; localhost:22

Connections                   ttl     opn     rt1     rt5     p50     p90
                              0       0       0.00    0.00    0.00    0.00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now you should be able to connect with ssh (in my case) with command: &lt;code&gt;ssh -p 13036 whoami@0.tcp.ngrok.io&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you don&amp;rsquo;t have any issues with accessing you machine over Internet you are free to follow next steps :) (otherwise check &lt;a href=&#34;#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; section).&lt;/p&gt;
&lt;h2 id=&#34;3-bypass-random-port-issue&#34;&gt;3. Bypass random port issue&lt;/h2&gt;
&lt;p&gt;If you run ngrok couple of times you should notice that every time you service is running at random port, to bypass this issue you can by a premium or make some additional steps presented below.&lt;/p&gt;
&lt;h3 id=&#34;install-dependencies&#34;&gt;Install dependencies&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install -y python3 python3-pip curl jq
pip3 install telegram
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;setup-telegram-bot&#34;&gt;Setup Telegram bot&lt;/h3&gt;
&lt;p&gt;For myself I decided to create Telegram&lt;a href=&#34;#references&#34;&gt;[2]&lt;/a&gt; bot which will send me external hostname and random IP address. Ofc you need to have created Telegram account to follow next steps.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Start conversation with telegram &lt;a href=&#34;https://t.me/botfather&#34;&gt;Botfather&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Type commands in Botfather conversation:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/newbot
mysuper_bot &lt;span style=&#34;color:#75715e&#34;&gt;# replace &amp;#34;mysuper&amp;#34; with your bot name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Copy API key and start conversation with your bot&lt;/li&gt;
&lt;li&gt;Type something in the chat &amp;amp; run the below code:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sys &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; argv
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; telegram

bot &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; telegram&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Bot(token&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;YOUR_API_KEY&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(bot&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getUpdates())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Copy &lt;code&gt;chat_id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create script &lt;code&gt;tsend.py&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sys &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; argv
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; telegram

bot &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; telegram&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Bot(token&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;YOUR_API_KEY&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# FIXME your api key&lt;/span&gt;
chat_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# FIXME YOUR_CHAT_ID&lt;/span&gt;
raw_msg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tcp://&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#34;tcp://0.tcp.ngrok.io:10361&amp;#34;&lt;/span&gt;
ip,port &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; raw_msg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;)

message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{ip}:{port}&amp;#39;&lt;/span&gt;
bot&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;send_message(chat_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;chat_id, text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;message)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Check if you are able to send message to you from your bot by typing &lt;code&gt;python3 tsend.py hello&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;make-your-service-always-available&#34;&gt;Make your service always available&lt;/h3&gt;
&lt;p&gt;Final step, below script will:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Start ngrok tunnel if it is not running&lt;/li&gt;
&lt;li&gt;Send you actual &lt;code&gt;IP:PORT&lt;/code&gt; thanks to telegram bot&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Below script is designed to be run from cron, thanks to this solution it will be run automatically i.e every 5 minutes:
&lt;code&gt;*/5 * * * * path/to/monitor.sh&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# monitor.sh&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash&lt;/span&gt;

NGROK&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/usr/local/bin/ngrok&amp;#39;&lt;/span&gt;
DIR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$HOME&lt;span style=&#34;color:#e6db74&#34;&gt;/ngrok-apps&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# directory containing this script and tsend.py&lt;/span&gt;
URL_DIR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/tmp/ngrok-url&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# check if it&amp;#39;s working&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; ! &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pidof ngrok&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[ngrok] is not working, starting new instance...&amp;#34;&lt;/span&gt;
        $NGROK start sshglob &amp;gt; /dev/null &amp;amp;
        sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# get current status of tunnel&lt;/span&gt;
NEW_STATUS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;curl -s http://127.0.0.1:4040/api/tunnels | jq &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.tunnels[0] .public_url&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[ngrok] &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;date&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$NEW_STATUS&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
OLD_STATUS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$URL_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        OLD_STATUS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;cat $URL_DIR&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# check if differ&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$NEW_STATUS&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; !&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$OLD_STATUS&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[ngrok] New status detected! Updating IP&amp;#34;&lt;/span&gt;
        echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$NEW_STATUS&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$URL_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
        python3 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$DIR&lt;span style=&#34;color:#e6db74&#34;&gt;/tsend.py&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$NEW_STATUS&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If everything works you should receive notification to your telegram if IP or port will change.&lt;/p&gt;
&lt;h2 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h2&gt;
&lt;h4 id=&#34;my-ngrok-tunnel-is-started-but-i-cant-access-service&#34;&gt;My ngrok tunnel is started, but I can&amp;rsquo;t access service&lt;/h4&gt;
&lt;p&gt;Is this service running also on localhost? Or can you reach shown ngrok host (IP)?&lt;/p&gt;
&lt;h3 id=&#34;can-i-use-something-else-than-telegram&#34;&gt;Can I use something else than telegram?&lt;/h3&gt;
&lt;p&gt;Yes, but I had already telegram in place. If you need you can use i.e Discord, Slack, mail, etc. (but you need to modify &lt;code&gt;tsend.py&lt;/code&gt; script)&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://ngrok.com/&#34;&gt;https://ngrok.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://telegram.org/&#34;&gt;https://telegram.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content>
    </item>
    
    <item>
      <title>Keep Your Notes Organized (bear2mdtree demo)</title>
      <link>/posts/keep-your-md-notes-organized/</link>
      <pubDate>Sat, 18 Jan 2020 09:00:00 +0100</pubDate>
      
      <guid>/posts/keep-your-md-notes-organized/</guid>
      <description>Journey of finding ideal note-taking app  TL;DR: If you want to transfer your bear notes to markdown goto Move your bear notes, if you want to emulate Bear multi-tagging check Multitagging support.
 Once upon a time I was using Bear.app for writing and organizing notes. It had really good features like multi-tagging and couple of other nice features like pseudo markdown support. Unfortunatelly a lot of things were bugged, developers slow in fixing them so I decided to move my notes from Bear to other platform.</description>
      <content>&lt;h2 id=&#34;journey-of-finding-ideal-note-taking-app&#34;&gt;Journey of finding ideal note-taking app&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;TL;DR: If you want to transfer your bear notes to markdown goto &lt;a href=&#34;#Moving-bear-notes&#34;&gt;Move your bear notes&lt;/a&gt;, if you want to emulate &lt;em&gt;Bear&lt;/em&gt; multi-tagging check &lt;a href=&#34;#multitagging-support&#34;&gt;Multitagging support&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once upon a time I was using &lt;a href=&#34;https://bear.app&#34;&gt;Bear.app&lt;/a&gt; for writing and organizing notes. It had really good features like multi-tagging and couple of other nice features like pseudo markdown support. Unfortunatelly a lot of things were bugged, developers slow in fixing them so I decided to move my notes from &lt;em&gt;Bear&lt;/em&gt; to other platform.&lt;/p&gt;
&lt;h3 id=&#34;requirements&#34;&gt;Requirements&lt;/h3&gt;
&lt;p&gt;I wanted to have these features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WYSWIG (What You See Is What You Get) editor with only 1 pane,&lt;/li&gt;
&lt;li&gt;Notes should be kept / written in Markdown,&lt;/li&gt;
&lt;li&gt;Support image pasting from clipboard,&lt;/li&gt;
&lt;li&gt;Sync,&lt;/li&gt;
&lt;li&gt;Support for nested tags(1),&lt;/li&gt;
&lt;li&gt;Support for multi-tagging(2).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;1-nested-tags&#34;&gt;(1) Nested tags&lt;/h4&gt;
&lt;p&gt;We can have tree-like tags, i.e notes assigned to: &lt;code&gt;tag1/sub1&lt;/code&gt;, will be also visible in &lt;code&gt;tag1&lt;/code&gt;, but not in &lt;code&gt;tag2/sub1&lt;/code&gt; (defferent parent).&lt;/p&gt;
&lt;h4 id=&#34;2-multi-tagging&#34;&gt;(2) Multi-tagging&lt;/h4&gt;
&lt;p&gt;Notes can belong to multiple tags, so they should be visible from multiple tag sub-trees.&lt;/p&gt;
&lt;h2 id=&#34;ideal-doesnt-exists-but&#34;&gt;Ideal doesn&amp;rsquo;t exists, but&amp;hellip;&lt;/h2&gt;
&lt;p&gt;Finally I couldn&amp;rsquo;t find ideal substitute for &lt;em&gt;Bear&lt;/em&gt;, so I decided to move into some WYSWIG Markdown editor which will nicely present meta-data for multi-tagging - I will take care about the rest of mine requirements.&lt;/p&gt;
&lt;p&gt;I decided to move to &lt;a href=&#34;https://typora.io/&#34;&gt;Typora&lt;/a&gt; - it is not perfect, but it seems to work fine. Moving to editor based on directory tree (folders = tags) have one big disadvantage - we can&amp;rsquo;t have multiple tags (but nested tags are working nicely). I had idea how to overcome this issue.&lt;/p&gt;
&lt;h3 id=&#34;prerequirements&#34;&gt;Prerequirements&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Clone my repo &lt;a href=&#34;https://github.com/trib0r3/bear2markdowntree&#34;&gt;bear2markdowntree&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Follow step (1) and (2) from &lt;em&gt;How to&lt;/em&gt; section.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;move-your-bear-notes&#34;&gt;Move your bear notes&lt;/h3&gt;
&lt;p&gt;First of all I created a concept of &amp;ldquo;main tag&amp;rdquo;, so if note have multiple tags (i.e &lt;code&gt;tag1/sub1&lt;/code&gt; and &lt;code&gt;tag2/sub2&lt;/code&gt;) we have to choose which tag is more important to us. The &lt;em&gt;main tag&lt;/em&gt; will be actually translated into directory structure in your notes directory and saved there! The rest of the tags will be added into note as YAML meta-data.&lt;/p&gt;
&lt;p&gt;For example: you have exported &lt;em&gt;bear&lt;/em&gt; note to &lt;code&gt;$BEAR_DIR/note.md&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;# Note

My note

#tag1/sub1 #tag2/sub2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After exporting this note with my script and selecting &lt;code&gt;#tag1/sub1&lt;/code&gt; as main tag, the note will be saved under &lt;code&gt;$NOTES_DIR/tag1/sub1/note.md&lt;/code&gt; and it will look like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;---
tags: [&amp;#34;tag1/sub1&amp;#34;, &amp;#34;tag2/sub2&amp;#34;]
---
# Note

My note
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;demo&#34;&gt;Demo&lt;/h4&gt;
&lt;p&gt;Before running &lt;code&gt;export-bear2typora.py&lt;/code&gt; don&amp;rsquo;t forget setup script by editing it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# config dirs&lt;/span&gt;
NOTE_DIR &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Notes/&amp;#34;&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;# output dir&lt;/span&gt;
BEAR_DIR &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BearNotes/&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;# input dir&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Paths are relative to script path, during script execution you can be prompted for tag selection. During this you can also jump into python interactive session and fix tag name if something was wrongly matched (minimum knowledge of python is required) - tags are kept in &lt;code&gt;tags&lt;/code&gt; array.&lt;/p&gt;
&lt;p&gt;After this process you should have exported and fixed notes in your &lt;code&gt;BEAR_DIR&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;multitagging-support&#34;&gt;Multitagging support&lt;/h3&gt;
&lt;p&gt;This topic is actually nicely described in &lt;a href=&#34;https://github.com/trib0r3/bear2markdowntree#multi-tagging-support&#34;&gt;README&lt;/a&gt;. We can emulate multi-tags structure by symbolic links (but with some problems on Windows and in Typora) or by creating special file which I called &lt;em&gt;index&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This file should be (re)generated with &lt;code&gt;build-tags.py&lt;/code&gt; each time you decide to put some new file in your directory list.&lt;/p&gt;
&lt;p&gt;Here you should edit only one variable (if you have &lt;code&gt;NOTES_DIR&lt;/code&gt; relative to home directory):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;HOME_USER &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(Path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;home())
NOTES_DIR &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; HOME_USER &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Dropbox/Notes/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# FIXME:  add path to your Notes folder (relative to $HOME)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to use absoulte path change code to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;NOTES_DIR &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/root/home/notes/&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Additionally if you don&amp;rsquo;t want to see some tags, you can add them here:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# If you want ignore some tags in the final listing add them to this list&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# WARNING: this feature is actually taking only subtag, &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  Ex#1: you have note with tag: &amp;#34;dev/python/code-snippets&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    if you decide to ignore tag &amp;#34;dev&amp;#34;, then all subtags (&amp;#34;python&amp;#34;, &amp;#34;code-snippets&amp;#34;)  will be also ignored!&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  Ex#2: you have 2 notes with tags: note1: &amp;#39;q/w/e&amp;#39;, &amp;#39;e/w/q&amp;#39; (you have the same subtab &amp;#39;w&amp;#39;, but in totally different subtrees)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    Ignoring tag &amp;#39;w&amp;#39; will affect BOTH subtrees, &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    It isn&amp;#39;t possible to ignore subtag only from specified tree! Ignoring &amp;#34;q/w&amp;#34; will not work!&lt;/span&gt;
IGNORE_TAGS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [] &lt;span style=&#34;color:#75715e&#34;&gt;# FIXME&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After running this script you should have &lt;code&gt;index.md&lt;/code&gt; file generated in your &lt;code&gt;NOTES_DIR&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;sync&#34;&gt;Sync&lt;/h3&gt;
&lt;p&gt;This is the simplest step, just create &lt;a href=&#34;https://www.dropbox.com/&#34;&gt;Dropbox&lt;/a&gt; account, put your notes there and sync your notes across all devices!&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
